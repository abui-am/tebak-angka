{"version":3,"sources":["components/Game.js","components/Scoreboard.js","components/Navbar.js","components/Header.js","components/App.js","index.js"],"names":["Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","guess","undefined","difficulty","answer","Math","floor","random","min","max","maximum","accuracy","turns","name","nameSubmited","lasttry","handleNameChange","bind","assertThisInitialized","handleNumberChange","guessNumber","startGame","onSubmitted","getRating","getIndicator","getText","indicator","e","target","value","isNaN","setState","parseInt","names","outcome","ratings","_this2","turn","rating","_this3","acc","abs","a","oc","text","_this4","diff","mins","maxs","outcomeClass","preventDefault","console","log","concat","newTodo","axios","post","then","res","data","react_default","createElement","className","type","placeholder","onChange","onClick","Component","defaultProps","magicNumber","Score","keys","page","score","Scoreboard","setPage","scores","perpage","pages","scoreList","Axios","get","catch","err","map","i","Scoreboard_Score","style","marginTop","Navbar","react_router_dom","to","react_router","exact","path","component","Header","href","title","App","callBackendAPI","_callee","response","body","regenerator_default","wrap","_context","prev","next","fetch","sent","json","status","Error","message","abrupt","stop","express","components_Header","components_Navbar","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a4e85066.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../style/game.css\";\r\nimport axios from \"axios\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      guess: undefined,\r\n      difficulty: props.difficulty,\r\n      answer: Math.floor(Math.random() * (+100 - +1)),\r\n      min: 0,\r\n      max: 100,\r\n      maximum: 100,\r\n      accuracy: 0,\r\n      turns: 1,\r\n      name: \"\",\r\n      nameSubmited: false,\r\n      lasttry: \"Masukan 1 s/d 100\"\r\n    };\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleNumberChange = this.handleNumberChange.bind(this);\r\n    this.guessNumber = this.guessNumber.bind(this);\r\n    this.startGame = this.startGame.bind(this);\r\n    this.onSubmitted = this.onSubmitted.bind(this);\r\n    this.getRating = this.getRating.bind(this);\r\n    this.getIndicator = this.getIndicator.bind(this);\r\n    this.getText = this.getText.bind(this);\r\n  }\r\n\r\n  outcomeClass() {\r\n    const indicator = this.state.indicator;\r\n\r\n    if (!indicator || indicator === \"terbakar\") {\r\n      return \"indicator--red fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    else if (indicator === \"mendidih\") {\r\n      return \"indicator--orangered fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    if (indicator === \"panas\") {\r\n      return \"indicator--orange fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    if (indicator === \"hangat\") {\r\n      return \"indicator--yellow fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    if (indicator === \"dingin\") {\r\n      return \"indicator--green fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    if (indicator === \"sangat dingin\") {\r\n      return \"indicator--cyan fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    return \"indicator--blue fa fa-thermometer-0 fa-2x\";\r\n  }\r\n\r\n  handleNumberChange(e) {\r\n    const guess = e.target.value;\r\n\r\n    if (!isNaN(guess)) {\r\n      this.setState(() => ({ guess: parseInt(guess) }));\r\n    }\r\n  }\r\n\r\n  handleNameChange(e) {\r\n    const names = e.target.value;\r\n    this.setState(() => ({ name: names }));\r\n  }\r\n\r\n\r\n  startGame() {\r\n    this.setState(() => ({\r\n      outcome: undefined,\r\n      turns: 1,\r\n      min: 0,\r\n      max: 100,\r\n      nameSubmited: false,\r\n      answer: Math.floor(Math.random() * (+100 - +1)),\r\n      lasttry:\"Masukan 1 s/d 100\"\r\n    }));\r\n  }\r\n\r\n  getRating() {\r\n    let ratings;\r\n    const turn = this.state.turns;\r\n    if (turn < 2) {\r\n      ratings = \"DEWO GACHA\";\r\n    } else if (turn < 4) {\r\n      ratings = \"TANGAN KERAMAT\";\r\n    } else if (turn < 7) {\r\n      ratings = \"LAKSEK\";\r\n    } else if (turn < 10) {\r\n      ratings = \"MAYAN HOKI\";\r\n    } else if (turn < 13) {\r\n      ratings = \"NORMAL\";\r\n    } else if (turn < 16) {\r\n      ratings = \"TIDAK HOKI\";\r\n    }  else if (turn < 20) {\r\n      ratings = \"AMPAS\";\r\n    }else {\r\n      ratings = \"TANGAN SETAN\";\r\n    }\r\n    this.setState(() => ({ rating: ratings, lasttry : this.state.guess }),()=> {this.getIndicator()});\r\n  }\r\n\r\n  getIndicator() {\r\n    const difference = Math.abs(\r\n      parseInt(this.state.guess) - parseInt(this.state.answer)\r\n    );\r\n    const acc = difference / this.state.maximum;\r\n    let a = \"membeku\";\r\n    if (acc <= 0.05) {\r\n      a = \"terbakar\";\r\n    }\r\n    else if (acc <= 0.1) {\r\n        a = \"mendidih\";\r\n      } \r\n      else if (acc <= 0.2) {\r\n      a = \"panas\";\r\n    } else if (acc <= 0.3) {\r\n      a = \"hangat\";\r\n    } else if (acc <= 0.4) {\r\n      a = \"dingin\";\r\n    } else if (acc <= 0.8) {\r\n      a = \"sangat dingin\";\r\n    }\r\n\r\n    this.setState(() => ({\r\n      accuracy: acc,\r\n      indicator : a\r\n    }),() => {this.getText()});\r\n  }\r\n  \r\n\r\n  guessNumber() {\r\nthis.getRating();\r\n    \r\n  }\r\n\r\n  getText()\r\n  {\r\n    const diff = this.state.guess - this.state.answer;\r\n    let oc,\r\n      text,\r\n      turn = parseInt(this.state.turns);\r\n    let mins = this.state.min,\r\n      maxs = this.state.max;\r\n    if (diff < 0) {\r\n      oc = \"Lebih Besar\";\r\n      mins = this.state.guess;\r\n    } else if (diff > 0) {\r\n      oc = \"Lebih Kecil\";\r\n      maxs = this.state.guess;\r\n    } else {\r\n      oc = \"kau menang\";\r\n    }\r\n\r\n    if (oc !== \"kau menang\") {\r\n      text = this.state.indicator + \" : \"+  oc ;\r\n      this.setState(() => ({\r\n        outcome: text,\r\n        min: mins,\r\n        max: maxs,\r\n        guess: \"\",\r\n\r\n        turns: turn + 1\r\n      }));\r\n    } else {\r\n      text = oc;\r\n      this.setState(() => ({\r\n        outcome: text,\r\n        guess: \"\"\r\n      }),() => {this.outcomeClass()});\r\n    }\r\n\r\n  }\r\n\r\n  onSubmitted(e) {\r\n    e.preventDefault();\r\n\r\n    console.log(`Form submitted:`);\r\n    console.log(`name: ${this.state.name}`);\r\n    console.log(`turn: ${this.state.turn}`);\r\n    console.log(`rating: ${this.state.rating}`);\r\n\r\n    const newTodo = {\r\n      name: this.state.name,\r\n      turn: this.state.turns,\r\n      rating: this.state.rating\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:4000/scores/add\", newTodo)\r\n      .then(res => console.log(res.data));\r\n\r\n    this.setState({\r\n      name: undefined,\r\n      rating: undefined,\r\n      nameSubmited: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.outcome !== 'kau menang' && (\r\n          <p className=\"turn\">PERCOBAAN KE-{this.state.turns}\r\n         </p>\r\n        )}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 mx-auto\">\r\n            {this.state.outcome !== \"kau menang\" && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control game-display\"\r\n                    placeholder={this.state.lasttry}\r\n                    onChange={this.handleNumberChange}\r\n                    value={this.state.guess}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <button\r\n                    className=\"btn btn-lg btn-success btn-block\"\r\n                    onClick={this.guessNumber}\r\n                  >\r\n                    GUESS\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {this.state.outcome && this.state.outcome !== \"kau menang\" && (\r\n              <div className=\"form-group\">\r\n                <div className=\"game-outcome\">\r\n                  \r\n                  <p>{this.state.outcome}</p>\r\n                  <div className='game-icon'>\r\n                  <i className={`${this.outcomeClass()}`} />\r\n                   </div>   \r\n                   <div className=\"game-outcome\">\r\n                \r\n                    </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {this.state.outcome === \"kau menang\" &&\r\n              this.state.nameSubmited === true && (\r\n                <div className=\"form-group\">\r\n                  <div className=\"game-outcome\">\r\n                    <p>{this.state.outcome}</p>\r\n                    <button\r\n                      className=\"btn btn-lg btn-success btn-block\"\r\n                      onClick={this.startGame}\r\n                    >\r\n                      MAIN LAGI\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n            {this.state.outcome === \"kau menang\" &&\r\n              this.state.nameSubmited === false && (\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control game-display\"\r\n                      placeholder=\"Your Name\"\r\n                      onChange={this.handleNameChange}\r\n                      value={this.state.name}\r\n                    />\r\n                  </div>\r\n                  <div className=\"game-outcome\">\r\n                    <p>{this.state.outcome}</p>\r\n                    <button\r\n                      className=\"btn btn-lg btn-success btn-block\"\r\n                      onClick={this.onSubmitted}\r\n                    >\r\n                      SUBMIT\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGame.defaultProps = {\r\n  guess: 0,\r\n  magicNumber: undefined\r\n};\r\n\r\nGame.propTypes = {\r\n  guess: PropTypes.number,\r\n  magicNumber: PropTypes.number,\r\n  difficulty: PropTypes.any\r\n};\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Axios from \"axios\";\r\n\r\nconst Pagelist = props => (\r\n    (\r\n<button onClick={props.func}>\r\n        {props.number}\r\n</button>\r\n    )\r\n\r\n    )  \r\n\r\n    const Score = props => (\r\n        props.keys >= props.page &&  props.keys < props.page + 10 &&\r\n        (\r\n    <tr keys={props.keys}>\r\n            <td>{props.keys + 1}</td>\r\n            <td>{props.score.name}</td>\r\n            <td>{props.score.turn}</td>\r\n            <td>{props.score.rating}</td>\r\n        </tr>\r\n        )\r\n        ) \r\n\r\nclass Scoreboard extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scores: [],\r\n            page : 2,\r\n            perpage :10,\r\n            pages :[1,2,3,4,5,6,7,8,9,10]\r\n        };\r\n\r\n        this.scoreList = this.scoreList.bind(this);\r\n        this.setPage = this.setPage.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get('http://localhost:4000/scores/sort')\r\n     .then(res => {\r\n         this.setState(() => ({scores : res.data}));\r\n     }) \r\n     .catch(err => {console.log(err)})\r\n    }\r\n\r\n    \r\n\r\n    scoreList(a) {\r\n        return this.state.scores.map(function(res,i){\r\n            return <Score score={res} keys={i} page={(a-1)*10} />;\r\n        })\r\n    }\r\n    \r\n\r\n    setPage= a =>{\r\n        this.setState({\r\n            page : a \r\n        })\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n        <h3>Ranking</h3>\r\n        <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n            <thead>\r\n                <tr>\r\n                    <th>No</th>\r\n                    <th>Nama</th>\r\n                    <th>Percobaan</th>\r\n                    <th>Title</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                { this.scoreList(this.state.page) }\r\n                {/* <Pagelist func={this.setPage(1)} number = {1}/>\r\n                <Pagelist func={this.setPage(2)} number = {2}/> */}\r\n\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n    \r\n    export default Scoreboard;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Game from \"./Game\";\r\nimport Scoreboard from \"./Scoreboard\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n       <Router>\r\n         <div>\r\n         <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\r\n        <div className=\"collpase navbar-collapse\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"navbar-item\">\r\n              <Link to=\"/\" className=\"nav-link\">Game</Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/scoreboard\" className=\"nav-link\">Curriculum Vitae</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n         <div className=\"container\">\r\n      <br/>\r\n      <Route exact path=\"/\" component={Game} />\r\n      <Route path=\"/scoreboard\" component={Scoreboard} />\r\n    </div>\r\n         </div>\r\n    \r\n  </Router>\r\n    );\r\n  }\r\n}\r\n    \r\n    export default Navbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n    <nav className=\"header navbar navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n            <div className=\"row m-auto\">\r\n                <i className=\"fa fa-gamepad fa-3x text-white my-auto\"></i>\r\n                <div className=\"h4 ml-3 my-auto text-light\" href=\"/\">{props.title}</div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nHeader.defaultProps = {\r\n    title: 'Title'\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default Header;","import 'bootstrap/dist/css/bootstrap.css';\nimport React, {Component} from 'react';\nimport Navbar from './Navbar';\nimport Header from './Header';\n\nclass App extends Component {\nstate = {\n    data: null\n  };\n\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n            <Header title={'Tebak Angka'}  />\n            <Navbar/>\n        <p className=\"App-intro\">{this.state.data}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}