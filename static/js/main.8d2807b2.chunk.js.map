{"version":3,"sources":["components/Desc.js","components/Game.js","components/Scoreboard.js","components/Navbar.js","components/Header.js","components/App.js","index.js"],"names":["Desc","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","guess","undefined","react_default","a","createElement","className","title","desc","Component","Game","difficulty","answer","Math","floor","random","min","max","maximum","accuracy","turns","name","nameSubmited","lasttry","handleNameChange","bind","assertThisInitialized","handleNumberChange","guessNumber","startGame","onSubmitted","getRating","getIndicator","getText","indicator","outcome","e","target","value","isNaN","setState","parseInt","names","ratings","_this2","turn","rating","description","_this3","acc","abs","oc","text","diff","mins","maxs","preventDefault","console","log","concat","newTodo","axios","post","then","res","data","type","placeholder","onChange","onClick","outcomeClass","Diff","components_Desc","Pagelist","func","number","Score","keys","page","score","Scoreboard","setPage","s","scores","perpage","pages","scoreList","Axios","get","catch","err","map","i","Scoreboard_Score","style","marginTop","Scoreboard_Pagelist","Navbar","react_router_dom","basename","to","react_router","exact","path","component","Header","href","defaultProps","App","callBackendAPI","_callee","response","body","regenerator_default","wrap","_context","prev","next","fetch","sent","json","status","Error","message","abrupt","stop","express","components_Header","components_Navbar","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.8d2807b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport generate from \"@babel/generator\";\r\n\r\nclass Desc extends Component \r\n{\r\n    constructor(props) {\r\n        super();\r\n    \r\n        this.state = {\r\n          guess: undefined\r\n        }; \r\n}\r\n\r\nrender() {\r\n    return (\r\n      <div className=\"\">\r\n          <p>Keberuntunganmu : </p>\r\n           <p>{this.props.title}</p>\r\n        <p className=\"\">{this.props.desc}</p>\r\n      </div>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n    \r\nexport default Desc;","/* eslint-disable no-dupe-class-members */\r\nimport React, { Component } from \"react\";\r\nimport \"../style/game.css\";\r\nimport axios from \"axios\";\r\nimport Desc from './Desc';\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      guess: undefined,\r\n      difficulty: props.difficulty,\r\n      answer: Math.floor(Math.random() * (+100 - +1)),\r\n      min: 0,\r\n      max: 100,\r\n      maximum: 100,\r\n      accuracy: 0,\r\n      turns: 1,\r\n      name: \"\",\r\n      nameSubmited: false,\r\n      lasttry: \"Masukan 1 s/d 100\"\r\n    };\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleNumberChange = this.handleNumberChange.bind(this);\r\n    this.guessNumber = this.guessNumber.bind(this);\r\n    this.startGame = this.startGame.bind(this);\r\n    this.onSubmitted = this.onSubmitted.bind(this);\r\n    this.getRating = this.getRating.bind(this);\r\n    this.getIndicator = this.getIndicator.bind(this);\r\n    this.getText = this.getText.bind(this);\r\n  }\r\n\r\n  outcomeClass() {\r\n    const indicator = this.state.indicator;\r\n\r\n    if (!indicator || indicator === \"terbakar\") {\r\n      return \"indicator--red fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    else if (indicator === \"mendidih\") {\r\n      return \"indicator--orangered fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    if (indicator === \"panas\") {\r\n      return \"indicator--orange fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    if (indicator === \"hangat\") {\r\n      return \"indicator--yellow fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    if (indicator === \"dingin\") {\r\n      return \"indicator--green fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    if (indicator === \"sangat dingin\") {\r\n      return \"indicator--cyan fa fa-thermometer-0 fa-2x\";\r\n    }\r\n\r\n    return \"indicator--blue fa fa-thermometer-0 fa-2x\";\r\n  }\r\n\r\n  Diff() {\r\n    const ocs = this.state.outcome;\r\n    if(ocs === \"ANGKA TERLALU KECIL\")\r\n    {\r\n      return \"fa fa-angle-double-left\";\r\n    }\r\n    else\r\n    {\r\n      return \"fa fa-angle-double-right\";\r\n    }\r\n  }\r\n  handleNumberChange(e) {\r\n    const guess = e.target.value;\r\n\r\n    if (!isNaN(guess)) {\r\n      this.setState(() => ({ guess: parseInt(guess) }));\r\n    }\r\n  }\r\n\r\n  handleNameChange(e) {\r\n    const names = e.target.value;\r\n    this.setState(() => ({ name: names }));\r\n  }\r\n\r\n\r\n  startGame() {\r\n    this.setState(() => ({\r\n      outcome: undefined,\r\n      turns: 1,\r\n      min: 0,\r\n      max: 100,\r\n      nameSubmited: false,\r\n      answer: Math.floor(Math.random() * (+100 - +1)),\r\n      lasttry:\"Masukan 1 s/d 100\"\r\n    }));\r\n  }\r\n\r\n  getRating() {\r\n    let ratings,desc;\r\n    const turn = this.state.turns;\r\n    if (turn < 2) {\r\n      ratings = \"DEWA GACHA\";\r\n      desc  = \"Keberuntungan anda sedang dipuncak\";\r\n    } else if (turn < 4) {\r\n      ratings = \"LAKSEK\";\r\n      desc  = \"Keberuntungan anda sedang dipuncak\";\r\n    } else if (turn < 7) {\r\n      ratings = \"BERUNTUNG\";\r\n      desc  = \"Keberuntungan anda sedang dipuncak\";\r\n    } else if (turn < 10) {\r\n      ratings = \"LUMAYAN\";\r\n      desc  = \"Keberuntungan anda sedang dipuncak\";\r\n    } else if (turn < 13) {\r\n      ratings = \"NORMAL\";\r\n      desc  = \"Keberuntungan anda sedang dipuncak\";\r\n    } else if (turn < 16) {\r\n      ratings = \"TIDAK BERUNTUNG\";\r\n      desc  = \"Keberuntungan anda sedang dipuncak\";\r\n    }  else if (turn < 20) {\r\n      ratings = \"AMPAS\";\r\n      desc  = \"Keberuntungan anda sedang dipuncak\";\r\n    }else {\r\n      ratings = \"BANYAK DOSA\";\r\n      desc  = \"Keberuntungan anda sedang dipuncak\";\r\n    }\r\n    this.setState(() => ({ rating: ratings, lasttry : this.state.guess, description : desc }),()=> {this.getIndicator()});\r\n  }\r\n\r\n  getIndicator() {\r\n    const difference = Math.abs(\r\n      parseInt(this.state.guess) - parseInt(this.state.answer)\r\n    );\r\n    const acc = difference / this.state.maximum;\r\n    let a = \"membeku\";\r\n    if (acc <= 0.05) {\r\n      a = \"terbakar\";\r\n    }\r\n    else if (acc <= 0.1) {\r\n        a = \"mendidih\";\r\n      } \r\n      else if (acc <= 0.2) {\r\n      a = \"panas\";\r\n    } else if (acc <= 0.3) {\r\n      a = \"hangat\";\r\n    } else if (acc <= 0.4) {\r\n      a = \"dingin\";\r\n    } else if (acc <= 0.8) {\r\n      a = \"sangat dingin\";\r\n    }\r\n\r\n    this.setState(() => ({\r\n      accuracy: acc,\r\n      indicator : a\r\n    }),() => {this.getText()});\r\n  }\r\n  \r\n\r\n  guessNumber() {\r\nthis.getRating();\r\n    \r\n  }\r\n\r\n  getText()\r\n  {\r\n    const diff = this.state.guess - this.state.answer;\r\n    let oc,\r\n      text,\r\n      turn = parseInt(this.state.turns);\r\n    let mins = this.state.min,\r\n      maxs = this.state.max;\r\n    if (diff < 0) {\r\n      oc = \"ANGKA TERLALU KECIL\";\r\n      mins = this.state.guess;\r\n    } else if (diff > 0) {\r\n      oc = \"ANGKA TERLALU BESAR\";\r\n      maxs = this.state.guess;\r\n    } else {\r\n      oc = \"kau menang\";\r\n    }\r\n\r\n    if (oc !== \"kau menang\") {\r\n      text =  oc ;\r\n      this.setState(() => ({\r\n        outcome: text,\r\n        min: mins,\r\n        max: maxs,\r\n        guess: \"\",\r\n\r\n        turns: turn + 1\r\n      }));\r\n    } else {\r\n      text = oc;\r\n      this.setState(() => ({\r\n        outcome: text,\r\n        guess: \"\"\r\n      }));\r\n    }\r\n\r\n  }\r\n\r\n  onSubmitted(e) {\r\n    e.preventDefault();\r\n\r\n    console.log(`Form submitted:`);\r\n    console.log(`name: ${this.state.name}`);\r\n    console.log(`turn: ${this.state.turn}`);\r\n    console.log(`rating: ${this.state.rating}`);\r\n\r\n    const newTodo = {\r\n      name: this.state.name,\r\n      turn: this.state.turns,\r\n      rating: this.state.rating\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:4000/scores/add\", newTodo)\r\n      .then(res => console.log(res.data));\r\n\r\n    this.setState({\r\n      name: undefined,\r\n      nameSubmited: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.outcome !== 'kau menang' && (\r\n          <p className=\"turn\">PERCOBAAN KE-{this.state.turns}\r\n         </p>\r\n        )}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 mx-auto\">\r\n            {this.state.outcome !== \"kau menang\" && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control game-display\"\r\n                    placeholder={this.state.lasttry}\r\n                    onChange={this.handleNumberChange}\r\n                    value={this.state.guess}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <button\r\n                    className=\"btn btn-lg btn-success btn-block\"\r\n                    onClick={this.guessNumber}\r\n                  >\r\n                    GUESS\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {this.state.outcome && this.state.outcome !== \"kau menang\" && (\r\n              <div className=\"form-group\">\r\n                <div className=\"game-outcome row\">\r\n             \r\n                  <p className=\"game-hint col-sm-12\">Hint : </p>\r\n                  <div className=\"col-sm-6\">\r\n                  <div className='game-icon'>\r\n                  <i className={`${this.outcomeClass()}`} />\r\n                   </div>   \r\n                   <div className=\"game-outcome\">\r\n                   <p>{this.state.indicator}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                  <div className='game-icon'>\r\n                  <i className={`${this.Diff()}`} />\r\n                   </div>   \r\n                   <div className=\"game-outcome\">\r\n                   <p>{this.state.outcome}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {this.state.outcome === \"kau menang\" &&\r\n              this.state.nameSubmited === true && (\r\n                <div className=\"form-group\">\r\n                  <div className=\"game-outcome\">\r\n                    <Desc desc={this.state.description} title={this.state.rating}/>\r\n                    <button\r\n                      className=\"btn btn-lg btn-success btn-block\"\r\n                      onClick={this.startGame}\r\n                    >\r\n                      MAIN LAGI\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n            {this.state.outcome === \"kau menang\" &&\r\n              this.state.nameSubmited === false && (\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control game-display\"\r\n                      placeholder=\"Your Name\"\r\n                      onChange={this.handleNameChange}\r\n                      value={this.state.name}\r\n                    />\r\n                  </div>\r\n                  <div className=\"game-outcome\">\r\n                    <p>{this.state.outcome}</p>\r\n                    <button\r\n                      className=\"btn btn-lg btn-success btn-block\"\r\n                      onClick={this.onSubmitted}\r\n                    >\r\n                      SUBMIT\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Axios from \"axios\";\r\n\r\nconst Pagelist = props => (\r\n    (\r\n<button onClick={props.func} value={props.value}>\r\n        {props.number}\r\n</button>\r\n    )\r\n\r\n    )  \r\n\r\n    const Score = props => (\r\n        props.keys >= props.page &&  props.keys < props.page + 10 &&\r\n        (\r\n    <tr keys={props.keys}>\r\n            <td>{props.keys + 1}</td>\r\n            <td>{props.score.name}</td>\r\n            <td>{props.score.turn}</td>\r\n            <td>{props.score.rating}</td>\r\n        </tr>\r\n        )\r\n        ) \r\n\r\nclass Scoreboard extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scores: [],\r\n            page : 1,\r\n            perpage :10,\r\n            pages :[1,2,3,4,5,6,7,8,9,10]\r\n        };\r\n\r\n        this.scoreList = this.scoreList.bind(this);\r\n        this.setPage = this.setPage.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get('http://localhost:4000/scores/sort')\r\n     .then(res => {\r\n         this.setState(() => ({scores : res.data}));\r\n     }) \r\n     .catch(err => {console.log(err)})\r\n    }\r\n\r\n    \r\n\r\n    scoreList(a) {\r\n        return this.state.scores.map(function(res,i){\r\n            return <Score score={res} keys={i} page={(a-1)*10} />;\r\n        })\r\n    }\r\n    \r\n\r\n    setPage= e =>{\r\n        const a = e.target.value;\r\n        const s = parseInt(a);\r\n        // alert(a);\r\n        this.setState({\r\n            page : s \r\n        })\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n        <h3>Ranking</h3>\r\n        <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n            <thead>\r\n                <tr>\r\n                    <th>No</th>\r\n                    <th>Nama</th>\r\n                    <th>Percobaan</th>\r\n                    <th>Title</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                { this.scoreList(this.state.page) }\r\n                <Pagelist func={this.setPage} number = {1} value={1}/>\r\n                <Pagelist func={this.setPage} number = {2} value={2}/>\r\n                <Pagelist func={this.setPage} number = {3} value={3}/>\r\n                <Pagelist func={this.setPage} number = {4} value={4}/>\r\n                <Pagelist func={this.setPage} number = {5} value={5}/>\r\n                <Pagelist func={this.setPage} number = {6} value={6}/>\r\n                <Pagelist func={this.setPage} number = {7} value={7}/>\r\n                <Pagelist func={this.setPage} number = {8} value={8}/>\r\n                <Pagelist func={this.setPage} number = {9} value={9}/>\r\n                <Pagelist func={this.setPage} number = {10} value={10}/>\r\n\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n    \r\n    export default Scoreboard;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Game from \"./Game\";\r\nimport Scoreboard from \"./Scoreboard\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n       <Router basename=\"/tebak-angka\">\r\n         <div>\r\n         <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\r\n        <div className=\"collpase navbar-collapse\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"navbar-item\">\r\n              <Link to=\"/\" className=\"nav-link\">Game</Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/scoreboard\" className=\"nav-link\">Scoreboard</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n         <div className=\"container\">\r\n      <br/>\r\n      <Route exact path=\"/\" component={Game} />\r\n      <Route path=\"/scoreboard\" component={Scoreboard} />\r\n    </div>\r\n         </div>\r\n    \r\n  </Router>\r\n    );\r\n  }\r\n}\r\n    \r\n    export default Navbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n    <nav className=\"header navbar navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n            <div className=\"row m-auto\">\r\n                <i className=\"fa fa-gamepad fa-3x text-white my-auto\"></i>\r\n                <div className=\"h4 ml-3 my-auto text-light\" href=\"/\">{props.title}</div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nHeader.defaultProps = {\r\n    title: 'Title'\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default Header;","import 'bootstrap/dist/css/bootstrap.css';\nimport React, {Component} from 'react';\nimport Navbar from './Navbar';\nimport Header from './Header';\n\nclass App extends Component {\nstate = {\n    data: null\n  };\n\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n            <Header title={'Tebak Angka'}  />\n            <Navbar/>\n        <p className=\"App-intro\">{this.state.data}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}